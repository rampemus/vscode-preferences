{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"php": {
		"scope": "php,html,javascript",
		"prefix": "php",
		"body": [
			"<?php ${1} ?>${0}"
		],
		"description": "Add php tag"
	},
	"@php": {
		"scope": "blade",
		"prefix": "php",
		"body": [
			"@php ${0} @endphp"
		],
		"description": "Add php tag"
	},
	"php echo": {
		"scope": "php,html,javascript,blade",
		"prefix": "echo",
		"body": [
			"<?php echo ${1} ?>${0}"
		],
		"description": "Add echo inside php tag"
	},
	"dump a line": {
		"scope": "php,blade",
		"prefix": "dump",
		"body": [
			"echo '<br>$1: <pre>';",
			"var_dump(${1});",
			"echo '</pre><br>'${0};"
		]
	},
	"dump a json": {
		"scope": "php,blade",
		"prefix": ["dump_json", "echo_json"],
		"body": [
			"echo json_encode( ${1}, JSON_PRETTY_PRINT );",
		]
	},
	"log echo to a file": {
		"scope": "php,blade",
		"prefix": "log",
		"body": [
			"ob_start(); echo ${0};",
			"error_log( ob_get_contents(), 3 ,'$TM_FILENAME_BASE' . '.log' ); ob_end_clean();"
		]
	},
	"log dump to a file": {
		"scope": "php,blade",
		"prefix": "log_dump",
		"body": [
			"ob_start(); var_dump( ${0} );",
			"error_log( ob_get_contents(), 3 ,'$TM_FILENAME_BASE' . '.log' ); ob_end_clean();"
		]
	},
	"log json to a file": {
		"scope": "php,blade",
		"prefix": "log_json",
		"body": [
			"ob_start(); echo json_encode( ${0}, JSON_PRETTY_PRINT );",
			"error_log( ob_get_contents(), 3 ,'$TM_FILENAME_BASE' . '.log' ); ob_end_clean();"
		]
	},

	"dump twig variable": {
		"scope": "twig",
		"prefix": "dump",
		"body": [
			"{{ dump(_context|keys) }}",
			"<br>",
			"<br>",
			"{{ dump(${0}) }}",
		]
	},
	"have posts loop": {
		"scope": "php,html,javascript,blade",
		"prefix": "have_posts",
		"body": [
			"<?php if (have_posts()) : while (have_posts()) : the_post(); ?>",
			"	${0}",
			"<?php endwhile; else: endif; ?>"
		],
		"description": "Add echo inside php tag"
	},
	"load_css function": {
		"scope": "php,html,javascript,blade",
		"prefix": "load_css",
		"body": [
			"function load_css() {",
			"	wp_register_style( 'bootstrap', get_template_directory_uri() . '/css/bootstrap.min.css', array(), false, 'all' );",
			"	wp_enqueue_style( 'bootstrap' );",
			"}",
			"add_action( 'wp_enqueue_scripts', 'load_css' );",
		],
		"description": "Skeletor: Load CSS skeletor with bootstrap"
	},
	"load_js function": {
		"scope": "php,html,javascript,blade",
		"prefix": "load_js",
		"body": [
			"function load_js() {",
			"	wp_enqueue_script( 'jquery' );",
			"	wp_register_script( 'bootstrap', get_template_directory_uri() . '/js/bootstrap.min.js', 'jquery', false, true );",
			"	wp_enqueue_script( 'bootstrap' );",
			"}",
			"add_action( 'wp_enqueue_scripts', 'load_js' );",
		],
		"description": "Skeletor: Load CSS with bootstrap"
	},
	"add_theme_support function": {
		"scope": "php,html,javascript,blade",
		"prefix": "add_theme_support",
		"body": [
			"add_theme_support( 'menus' );",
			"register_nav_menus(",
			"	array(",
			"		'top-menu' => 'Top Menu Location',",
			"		'footer-menu' => 'Footer Menu Location',",
			"	)",
			");"
		],
		"description": "Skeletor: Add theme support"
	},
	"get_header": {
		"scope": "php,html,javascript,blade",
		"prefix": "get_header",
		"body": [
			"<?php get_header() ?>"
		],
		"description": "inside php tag get_header"
	},
	"the_title": {
		"scope": "php,html,javascript,blade",
		"prefix": "the_title",
		"body": [
			"<?php the_title() ?>"
		],
		"description": "inside php tag the_title"
	},
	"get_template_part": {
		"scope": "php,html,javascript,blade",
		"prefix": "get_template_part",
		"body": [
			"<?php get_template_part('${1}', '${2}') ?>${0}"
		],
		"description": "inside php tag get_template_part"
	},
	"wp_head": {
		"scope": "php,html,javascript,blade",
		"prefix": "wp_head",
		"body": [
			"<?php wp_head() ?>"
		],
		"description": "inside php tag wp_head"
	},
	"comments_template": {
		"scope": "php,html,javascript,blade",
		"prefix": "comments_template",
		"body": [
			"<?php",
			"    if ( comments_open() ):",
			"        comments_template();",
			"    endif;",
			"?>"
		],
		"description": "inside php tag comments_template"
	},
	"comment_form": {
		"scope": "php,html,javascript,blade",
		"prefix": "comment_form",
		"body": [
			"<?php comment_form() ?>",
		],
		"description": "inside php tag comment_form"
	},
	"wp_link_pages": {
		"scope": "php,html,javascript,blade",
		"prefix": "wp_link_pages",
		"body": [
			"<?php wp_link_pages() ?>",
		],
		"description": "inside php tag wp_link_pages"
	},
}

