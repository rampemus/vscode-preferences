{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Prototype function": {
		"prefix": "prototype",
		"body": [
			"${1:class_name}.prototype.${2:method_name} = function(${3}) {",
			"  ${0:${VISUAL}}",
			"}"
		]
	},
	"Function": {
		"prefix": "function",
		"body": [
			"function ${1:function_name}(${2}) {",
			"  ${0:${VISUAL}}",
			"}"
		]
	},
	"Async Function": {
		"prefix": "async function",
		"body": [
			"function ${1:function_name}(${2}) {",
			"  ${0:${VISUAL}}",
			"}"
		]
	},
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1', ${1})"
		],
		"description": "Log variable to console"
	},
	"Ignore eslint": {
		"prefix": "eslint-disable-line",
		"body": [
			"// eslint-disable-line"
		],
		"description": "Ignore eslint this line"
	},
	"Ignore next eslint": {
		"prefix": "eslint-disable-next-line",
		"body": [
			"// eslint-disable-next-line"
		],
		"description": "Ignore eslint next line"
	},
	"Await millisecs": {
		"prefix": "delay",
		"body": [
			"await new Promise(resolve => setTimeout(resolve, ${1}));"
		],
		"description": "Delay execution"
	}
}

