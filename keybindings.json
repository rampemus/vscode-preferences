// Place your key bindings in this file to override the defaultsauto[]
[
   {
      "key": "shift+alt+t",
      "command": "workbench.action.reopenClosedEditor",
      "when": "isMac"
   },
   {
      "key": "shift+cmd+t",
      "command": "-workbench.action.reopenClosedEditor",
      "when": "isMac"
   },

   {
      "key": "shift+cmd+t",
      "command": "workbench.action.terminal.toggleTerminal",
      "when": "isMac"
   },
   {
      "key": "ctrl+alt+t",
      "command": "-workbench.action.terminal.toggleTerminal",
      "when": "isMac"
   },
   {
      "key": "shift+cmd+n",
      "command": "workbench.action.newWindow"
   },
   {
      "key": "shift+alt+d",
      "command": "eslint.executeAutofix"
   },

   {
      "key": "tab",
      "command": "repl.action.acceptInput",
      "when": "inDebugRepl && textInputFocus"
   },
   {
      "key": "enter",
      "command": "-repl.action.acceptInput",
      "when": "inDebugRepl && textInputFocus"
   },

   {
      "key": "shift+enter",
      "command": "toggleSuggestionDetails",
      "when": "suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "ctrl+space",
      "command": "-toggleSuggestionDetails",
      "when": "suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "ctrl+space",
      "command": "editor.action.triggerSuggest",
      "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
   },
   {
      "key": "ctrl+space",
      "command": "-editor.action.triggerSuggest",
      "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
   },

   {
      "key": "tab",
      "command": "selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "ctrl+n",
      "command": "-selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "shift+tab",
      "command": "selectPrevSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "ctrl+p",
      "command": "-selectPrevSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "tab",
      "command": "acceptSelectedSuggestion",
      "when": "suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "tab",
      "command": "-acceptSelectedSuggestion",
      "when": "suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "cmd+down",
      "command": "-selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "cmd+up",
      "command": "-selectPrevSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
   },

   // Dragging lines
   {
      "key": "alt+down",
      "command": "editor.action.moveLinesDownAction",
      "when": "editorTextFocus && !editorReadonly"
   },
   {
      "key": "alt+down",
      "command": "-editor.action.moveLinesDownAction",
      "when": "editorTextFocus && !editorReadonly"
   },
   {
      "key": "alt+j",
      "command": "editor.action.moveLinesDownAction",
      "when": "editorTextFocus"
   },
   {
      "key": "ctrl+cmd+down",
      "command": "-editor.action.moveLinesDownAction",
      "when": "editorTextFocus"
   },
   {
      "key": "alt+k",
      "command": "editor.action.moveLinesUpAction",
      "when": "editorTextFocus"
   },
   {
      "key": "ctrl+cmd+up",
      "command": "-editor.action.moveLinesUpAction",
      "when": "editorTextFocus"
   },

   // Save files in normal mode
   // {
   //    "key": "shift+s",
   //    "command": "workbench.action.files.save",
   //    "when": "editorFocus && vim.active && vim.mode == 'Normal'"
   // },
   // {
   //    "key": "shift+s",
   //    "command": "workbench.action.files.save",
   //    "when": "editorFocus && neovim.mode == normal"
   // },
   // {
   //    "key": "shift+alt+k",
   //    "command": "extension.splitLine",
   //    "when": "editorFocus && vim.active && vim.mode == 'Visual'"
   // },
   {
      "key": "ctrl+cmd+s",
      "command": "-extension.splitLine",
      "when": "editorTextFocus && !editorReadonly"
   },

   {
      "key": "shift+cmd+s",
      "command": "-workbench.action.files.saveAs"
   },
   {
      "key": "shift+cmd+s",
      "command": "workbench.action.files.saveAll"
   },
   {
      "key": "alt+cmd+s",
      "command": "-workbench.action.files.saveAll"
   },
   {
      "key": "shift+cmd+a shift+cmd+s",
      "command": "workbench.action.files.saveAs",
      "when": "editorFocus || listFocus"
   },
   {
      "key": "cmd+n",
      "command": "-workbench.action.files.newUntitledFile"
   },
   {
      "key": "cmd+n",
      "command": "workbench.action.terminal.newInActiveWorkspace",
      "when": "terminalFocus && !editorTextFocus"
   },
   {
      "key": "shift+cmd+n",
      "command": "-workbench.action.newWindow"
   },
   {
      "key": "shift+cmd+k",
      "command": "-editor.action.deleteLines",
      "when": "textInputFocus && !editorReadonly"
   },
   {
      "key": "cmd+k",
      "command": "runCommands",
      "when": "editorFocus && terminal.integrated.visible",
      "args": {
         "commands": [
            "workbench.action.closeOtherEditors",
            "workbench.action.closeEditorsInOtherGroups",
            "workbench.action.closeSidebar",
            "workbench.action.closePanel",
            "workbench.action.terminal.toggleTerminal"
         ]
      }
   },
   {
      "key": "cmd+k",
      "command": "runCommands",
      "when": "editorFocus && !terminal.integrated.visible",
      "args": {
         "commands": [
            "workbench.action.closeOtherEditors",
            "workbench.action.closeEditorsInOtherGroups",
            "workbench.action.closeSidebar",
            "workbench.action.closePanel"
         ]
      }
   },
   {
      "key": "alt+cmd+t",
      "command": "-workbench.action.closeOtherEditors"
   },
   {
      "key": "shift+o",
      "command": "workbench.action.files.showOpenedFileInNewWindow",
      "when": "listFocus && !inputFocus && !terminalFocus"
   },
   {
      "key": "cmd+k o",
      "command": "-workbench.action.files.showOpenedFileInNewWindow"
   },

   // List navigation shortcuts
   {
      "key": "o",
      "command": "list.select",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "cmd+down",
      "command": "-list.select",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "enter",
      "command": "list.select",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "cmd+q",
      "command": "-workbench.action.quit"
   },
   {
      "key": "cmd+k",
      "command": "workbench.files.action.collapseExplorerFolders",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "cmd+s",
      "command": "workbench.action.files.save",
      "when": "editorFocus || listFocus"
   },
   {
      "key": "cmd+s",
      "command": "-workbench.action.files.save"
   },
   {
      "key": "p",
      "command": "list.toggleExpand",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "o",
      "command": "-list.toggleExpand",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "-",
      "command": "runCommands",
      "when": "listFocus && !inputFocus",
      "args": {
         "commands": [
            "list.focusParent",
            "list.collapse"
         ]
      }
   },

   // Navigation between changes
   {
      "key": "shift+[Quote]",
      "command": "workbench.action.navigateBack",
      "when": "listFocus || editorFocus && vim.active && vim.mode == 'Normal' || editorFocus && neovim.mode == normal"
   },
   {
      "key": "ctrl+-",
      "command": "-workbench.action.navigateBack"
   },
   {
      "key": "[Quote]",
      "command": "workbench.action.navigateForward",
      "when": "listFocus && textInputFocus || editorFocus && neovim.mode == 'normal' || editorFocus && vim.active && vim.mode == 'Normal'"
   },
   {
      "key": "ctrl+shift+-",
      "command": "-workbench.action.navigateForward"
   },
   {
      "key": "shift+cmd+[Quote]",
      "command": "workbench.action.navigateToLastEditLocation"
   },
   {
      "key": "cmd+k cmd+q",
      "command": "-workbench.action.navigateToLastEditLocation"
   },

   // Reference navigation
   {
      "key": "cmd+k cmd+k",
      "command": "-editor.action.defineKeybinding",
      "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
   },
   {
      "key": "cmd+k cmd+k",
      "command": "-keybindings.editor.defineKeybinding",
      "when": "inKeybindings && keybindingFocus"
   },
   {
      "key": "cmd+k cmd+e",
      "command": "-keybindings.editor.defineWhenExpression",
      "when": "inKeybindings && keybindingFocus"
   },

   // Terminal shortcuts
   {
      "key": "cmd+w",
      "command": "-workbench.action.closeWindow",
      "when": "!editorIsOpen && !multipleEditorGroups"
   },
   {
      "key": "cmd+w",
      "command": "-workbench.action.closeGroup",
      "when": "activeEditorGroupEmpty && multipleEditorGroups"
   },
   {
      "key": "cmd+w",
      "command": "workbench.action.terminal.kill",
      "when": "terminalFocus"
   },
   {
      "key": "cmd+s",
      "command": "workbench.action.terminal.split",
      "when": "terminalFocus"
   },
   {
      "key": "ctrl+shift+5",
      "command": "-workbench.action.terminal.split",
      "when": "terminalFocus"
   },
   {
      "key": "cmd+r",
      "command": "workbench.action.terminal.rename",
      "when": "terminalFocus"
   },

   // Terminal navigation
   {
      "key": "shift+cmd+c",
      "command": "-workbench.action.terminal.openNativeConsole",
      "when": "!terminalFocus"
   },
   {
      "key": "shift+cmd+c",
      "command": "editor.action.copyLinesDownAction",
      "when": "editorTextFocus"
   },
   {
      "key": "shift+cmd+d",
      "command": "-editor.action.copyLinesDownAction",
      "when": "editorTextFocus"
   },
   {
      "key": "shift+cmd+g",
      "command": "-workbench.action.terminal.findPrevious",
      "when": "terminalFindFocused || terminalFocus"
   },
   {
      "key": "cmd+escape",
      "command": "workbench.action.toggleSidebarVisibility",
      "when": "editorFocus || terminalFocus"
   },
   {
      "key": "cmd+escape",
      "command": "workbench.action.toggleSidebarVisibility",
      "when": "listFocus && !editorFocus && !editorTextFocus && !inputFocus && !terminalFocus"
   },

   // Reference navigation
   {
      "key": "shift+cmd+d",
      "command": "editor.action.revealDefinition",
      "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
   },
   {
      "key": "f12",
      "command": "-editor.action.revealDefinition",
      "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
   },
   {
      "key": "shift+cmd+g",
      "command": "-editor.action.previousMatchFindAction",
      "when": "editorFocus"
   },

   // List navigation
   {
      "key": "g g",
      "command": "list.focusFirst",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "home",
      "command": "-list.focusFirst",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "shift+g",
      "command": "list.focusLast",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "end",
      "command": "-list.focusLast",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "cmd+0",
      "command": "-workbench.action.focusSideBar"
   },
   {
      "key": "shift+cmd+g",
      "command": "workbench.view.scm"
   },
   {
      "key": "ctrl+shift+g",
      "command": "-workbench.view.scm"
   },
   {
      "key": "right",
      "command": "nextCompressedFolder",
      "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedLastFocus && !inputFocus"
   },
   {
      "key": "right",
      "command": "-nextCompressedFolder",
      "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedLastFocus && !inputFocus"
   },
   {
      "key": "left",
      "command": "previousCompressedFolder",
      "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedFirstFocus && !inputFocus"
   },
   {
      "key": "left",
      "command": "-previousCompressedFolder",
      "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedFirstFocus && !inputFocus"
   },
   {
      "key": "l",
      "command": "-list.select",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "h",
      "command": "-list.collapse",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "l",
      "command": "workbench.action.decreaseViewWidth",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "right",
      "command": "-list.expand",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "h",
      "command": "workbench.action.increaseViewWidth",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "left",
      "command": "-list.collapse",
      "when": "listFocus && !inputFocus"
   },

   // List actions
   {
      "key": "ö",
      "command": "workbench.action.find",
      "when": "editorFocus && neovim.mode == normal"
   },
   {
      "key": "shift+cmd+o",
      "command": "-workbench.action.gotoSymbol"
   },
   {
      "key": "cmd+o",
      "command": "-workbench.action.files.openFileFolder"
   },
   {
      "key": "up",
      "command": "list.focusUp",
      "when": "listFocus"
   },
   {
      "key": "ctrl+p",
      "command": "-list.focusUp",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "down",
      "command": "list.focusDown",
      "when": "listFocus"
   },
   {
      "key": "ctrl+n",
      "command": "-list.focusDown",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "enter",
      "command": "-list.select",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "cmd+w",
      "command": "workbench.action.toggleSidebarVisibility",
      "when": "!editorTextFocus && !terminalFocus && filesExplorerFocus && !showSettingsPage"
   },
   {
      "key": "cmd+b",
      "command": "-workbench.action.toggleSidebarVisibility"
   },
   {
      "key": "a",
      "command": "explorer.newFile",
      "when": "listFocus && !inputFocus && !terminalFocus"
   },
   {
      "key": "shift+a",
      "command": "explorer.newFolder",
      "when": "listFocus && !inputFocus && !terminalFocus"
   },
   {
      "key": "shift+d",
      "command": "deleteFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
   },
   {
      "key": "d",
      "command": "deleteFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
   },
   {
      "key": "alt+cmd+backspace",
      "command": "-deleteFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
   },
   {
      "key": "[Semicolon]",
      "command": "list.toggleKeyboardNavigation",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
   },
   {
      "key": "r",
      "command": "renameFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
   },
   {
      "key": "enter",
      "command": "-renameFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
   },
   {
      "key": "shift+cmd+r",
      "command": "editor.action.refactor",
      "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly && neovim.mode == visual"
   },
   {
      "key": "cmd+shift+r",
      "command": "editor.action.refactor",
      "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
   },
   {
      "key": "ctrl+shift+r",
      "command": "-editor.action.refactor",
      "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
   },
   {
      "key": "ctrl+k",
      "command": "-deleteAllRight",
      "when": "textInputFocus && !editorReadonly"
   },
   {
      "key": "cmd+q",
      "command": "workbench.action.quit",
      "when": "!terminalFocus"
   },
   {
      "key": "shift+cmd+i",
      "command": "editor.action.goToImplementation",
      "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
   },
   {
      "key": "cmd+p",
      "command": "workbench.action.reopenClosedEditor",
      "when": "inFilesPicker && inQuickOpen"
   },
   {
      "key": "shift+cmd+t",
      "command": "-workbench.action.reopenClosedEditor"
   },
   {
      "key": "s",
      "command": "explorer.openToSide",
      "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
   },
   {
      "key": "ctrl+enter",
      "command": "-explorer.openToSide",
      "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
   },
   {
      "key": "right",
      "command": "search.action.openResultToSide",
      "when": "fileMatchOrMatchFocus && searchViewletVisible"
   },
   {
      "key": "ctrl+enter",
      "command": "-search.action.openResultToSide",
      "when": "fileMatchOrMatchFocus && searchViewletVisible"
   },

   // Terminal navigation
   {
      "key": "cmd+l",
      "command": "-expandLineSelection",
      "when": "textInputFocus"
   },
   {
      "key": "cmd+l",
      "command": "workbench.action.terminal.focusNextPane",
      "when": "terminalFocus"
   },
   {
      "key": "alt+cmd+right",
      "command": "-workbench.action.terminal.focusNextPane",
      "when": "terminalFocus"
   },
   {
      "key": "cmd+h",
      "command": "workbench.action.terminal.focusPreviousPane",
      "when": "terminalFocus"
   },
   {
      "key": "alt+cmd+left",
      "command": "-workbench.action.terminal.focusPreviousPane",
      "when": "terminalFocus"
   },

   {
      "key": "shift+escape",
      "command": "vscode-neovim.escape",
      "when": "editorTextFocus && neovim.init"
   },
   {
      "key": "cmd+w",
      "command": "workbench.action.closeWindow",
      "when": "!editorIsOpen && !multipleEditorGroups && !terminalFocus && !listFocus"
   },
   {
      "key": "cmd+w",
      "command": "-workbench.action.closeWindow",
      "when": "!editorIsOpen && !multipleEditorGroups"
   },
   {
      "key": "cmd+w",
      "command": "workbench.action.closeActiveEditor",
      "when": "!terminalFocus && !listFocus"
   },
   {
      "key": "cmd+w",
      "command": "workbench.action.closeGroup",
      "when": "activeEditorGroupEmpty && multipleEditorGroups && !terminalFocus"
   },
   {
      "key": "cmd+w",
      "command": "-workbench.action.closeGroup",
      "when": "activeEditorGroupEmpty && multipleEditorGroups"
   },
   {
      "key": "cmd+w",
      "command": "-workbench.action.closeActiveEditor"
   },
   {
      "key": "cmd+o",
      "command": "workbench.action.openWorkspace"
   },
   {
      "key": "shift+cmd+o",
      "command": "workbench.action.files.openFileFolder"
   },
   {
      "key": "alt+cmd+up",
      "command": "-workbench.action.terminal.focusPreviousPane",
      "when": "terminalFocus && terminalProcessSupported"
   },
   {
      "key": "cmd+l",
      "command": "workbench.action.nextEditor",
      "when": "!terminalFocus"
   },
   {
      "key": "cmd+h",
      "command": "workbench.action.previousEditor",
      "when": "!terminalFocus"
   },
   {
      "key": "cmd+j",
      "command": "-workbench.action.togglePanel"
   },
   {
      "key": "cmd+j",
      "command": "runCommands",
      "args": {
         "commands": [
            "workbench.action.focusFirstEditorGroup",
            "workbench.action.openEditorAtIndex1"
         ]
      }
   },
   {
      "key": "alt+cmd+up",
      "command": "-editor.action.insertCursorAbove",
      "when": "editorTextFocus"
   },

   // alt+cmd+left/right reserved for windows control
   {
      "key": "alt+cmd+left",
      "command": "-workbench.action.terminal.focusPreviousPane",
      "when": "terminalFocus && terminalProcessSupported"
   },
   {
      "key": "alt+cmd+right",
      "command": "-workbench.action.terminal.focusNextPane",
      "when": "terminalFocus && terminalProcessSupported"
   },
   {
      "key": "alt+cmd+up",
      "command": "-workbench.action.terminal.focusPreviousPane",
      "when": "terminalFocus && terminalProcessSupported"
   },
   {
      "key": "alt+cmd+left",
      "command": "-workbench.action.terminal.focusPreviousPane",
      "when": "terminalFocus && terminalProcessSupported"
   },
   {
      "key": "alt+cmd+right",
      "command": "-workbench.action.terminal.focusNextPane",
      "when": "terminalFocus && terminalProcessSupported"
   },
   {
      "key": "shift+alt+s",
      "command": "editor.action.formatChanges"
   },
   {
      "key": "ctrl+shift+left",
      "command": "-editor.action.smartSelect.shrink",
      "when": "editorTextFocus"
   },
   {
      "key": "ctrl+shift+right",
      "command": "-editor.action.smartSelect.expand",
      "when": "editorTextFocus"
   },
   {
      "key": "alt+p",
      "command": "-seito-openfile.openFileFromText",
      "when": "editorTextFocus"
   },
   {
      "key": "ctrl+alt+cmd+n",
      "command": "-welcome.showNewFileEntries"
   },
   {
      "key": "cmd+n",
      "command": "workbench.action.files.newFile",
      "when": "editorTextFocus && !terminalFocus"
   },
   {
      "key": "down",
      "command": "search.focus.nextInputBox",
      "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
   },
   {
      "key": "enter",
      "command": "search.focus.nextInputBox",
      "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
   },
   {
      "key": "cmd+down",
      "command": "-search.focus.nextInputBox",
      "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
   },
   {
      "key": "shift+y",
      "command": "copyFilePath",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "alt+cmd+c",
      "command": "-copyFilePath",
      "when": "!editorFocus"
   },
   {
      "key": "cmd+e",
      // reload window
      "command": "workbench.action.reloadWindow",
      "when": "editorFocus && neovim.mode == normal"
   },

   // Git shortcuts
   {
      "key": "cmd+w",
      "command": "runCommands",
      "args": {
         "commands": [
            "gitlens.openWorkingFile",
            "workbench.action.openPreviousRecentlyUsedEditor",
            "workbench.action.closeActiveEditor"
         ]
      },
      "when": "inDiffEditor && neovim.mode == normal"
   },
   {
      "key": "cmd+w",
      "command": "workbench.action.closeSidebar",
      "when": "sideBarFocus"
   },

   // Remap for dealing with word wrap
   {
      "command": "type",
      "key": "j",
      "when": "neovim.mode == normal && editorTextFocus",
      "args": {
         "text": "gj"
      }
   },
   {
      "command": "type",
      "key": "k",
      "when": "neovim.mode == normal && editorTextFocus",
      "args": {
         "text": "gk"
      }
   }
]
