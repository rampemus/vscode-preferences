// Place your key bindings in this file to override the defaultsauto[]
[
   {
      "key": "alt+[Equal]",
      "command": "workbench.action.terminal.new"
   },
   {
      "key": "[IntlBackslash]",
      "command": "workbench.action.focusSideBar",
      "when": "editorFocus && vim.active && vim.mode == 'Normal' || terminalFocus"
   },
   {
      "key": "[IntlBackslash]",
      "command": "workbench.action.focusSideBar",
      "when": "terminalFocus || editorFocus && neovim.mode == 'normal'"
   },
   {
      "key": "shift+alt+t",
      "command": "workbench.action.reopenClosedEditor"
   },
   {
      "key": "shift+cmd+t",
      "command": "-workbench.action.reopenClosedEditor"
   },
   {
      "key": "shift+cmd+t",
      "command": "workbench.action.terminal.toggleTerminal"
   },
   {
      "key": "ctrl+alt+t",
      "command": "-workbench.action.terminal.toggleTerminal"
   },
   {
      "key": "tab",
      "command": "repl.action.acceptInput",
      "when": "inDebugRepl && textInputFocus"
   },
   {
      "key": "enter",
      "command": "-repl.action.acceptInput",
      "when": "inDebugRepl && textInputFocus"
   },
   {
      "key": "shift+enter",
      "command": "toggleSuggestionDetails",
      "when": "suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "ctrl+space",
      "command": "-toggleSuggestionDetails",
      "when": "suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "ctrl+space",
      "command": "editor.action.triggerSuggest",
      "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
   },
   {
      "key": "ctrl+space",
      "command": "-editor.action.triggerSuggest",
      "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
   },
   {
      "key": "tab",
      "command": "selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "ctrl+n",
      "command": "-selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "shift+tab",
      "command": "selectPrevSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "ctrl+p",
      "command": "-selectPrevSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "tab",
      "command": "acceptSelectedSuggestion",
      "when": "suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "tab",
      "command": "-acceptSelectedSuggestion",
      "when": "suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "cmd+down",
      "command": "-selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "cmd+up",
      "command": "-selectPrevSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "alt+down",
      "command": "editor.action.moveLinesDownAction",
      "when": "editorTextFocus && !editorReadonly"
   },
   {
      "key": "alt+down",
      "command": "-editor.action.moveLinesDownAction",
      "when": "editorTextFocus && !editorReadonly"
   },
   {
      "key": "alt+j",
      "command": "editor.action.moveLinesDownAction",
      "when": "editorTextFocus"
   },
   {
      "key": "ctrl+cmd+down",
      "command": "-editor.action.moveLinesDownAction",
      "when": "editorTextFocus"
   },
   {
      "key": "alt+k",
      "command": "editor.action.moveLinesUpAction",
      "when": "editorTextFocus"
   },
   {
      "key": "ctrl+cmd+up",
      "command": "-editor.action.moveLinesUpAction",
      "when": "editorTextFocus"
   },
   {
      "key": "shift+s",
      "command": "workbench.action.files.save",
      "when": "editorFocus && vim.active && vim.mode == 'Normal'"
   },
   {
      "key": "shift+s",
      "command": "workbench.action.files.save",
      "when": "editorFocus && neovim.mode == normal"
   },
   {
      "key": "shift+alt+k",
      "command": "extension.splitLine",
      "when": "editorFocus && vim.active && vim.mode == 'Visual'"
   },
   {
      "key": "ctrl+cmd+s",
      "command": "-extension.splitLine",
      "when": "editorTextFocus && !editorReadonly"
   },
   {
      "key": "shift+cmd+r",
      "command": "cmstead.jsRefactor.rename",
      "when": "editorTextFocus"
   },
   {
      "key": "shift+cmd+s",
      "command": "-workbench.action.files.saveAs"
   },
   {
      "key": "shift+cmd+s",
      "command": "workbench.action.files.saveAll"
   },
   {
      "key": "alt+cmd+s",
      "command": "-workbench.action.files.saveAll"
   },
   {
      "key": "cmd+n",
      "command": "-workbench.action.files.newUntitledFile"
   },
   {
      "key": "cmd+n",
      "command": "workbench.action.terminal.newInActiveWorkspace",
      "when": "editorTextFocus || listFocus || terminalFocus"
   },
   {
      "key": "shift+cmd+n",
      "command": "-workbench.action.newWindow"
   },
   {
      "key": "shift+cmd+k",
      "command": "-editor.action.deleteLines",
      "when": "textInputFocus && !editorReadonly"
   },
   {
      "key": "cmd+k",
      "command": "workbench.action.closeOtherEditors",
      "when": "editorFocus"
   },
   {
      "key": "alt+cmd+t",
      "command": "-workbench.action.closeOtherEditors"
   },
   {
      "key": "shift+o",
      "command": "workbench.action.files.showOpenedFileInNewWindow",
      "when": "listFocus && !inputFocus && !terminalFocus"
   },
   {
      "key": "cmd+k o",
      "command": "-workbench.action.files.showOpenedFileInNewWindow"
   },
   {
      "key": "o",
      "command": "list.select",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "enter",
      "command": "list.select",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "cmd+down",
      "command": "-list.select",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "cmd+q",
      "command": "-workbench.action.quit"
   },
   {
      "key": "shift+q",
      "command": "workbench.action.closeActiveEditor",
      "when": "editorFocus && vim.active && vim.mode == 'Normal'"
   },
   {
      "key": "shift+q",
      "command": "workbench.action.closeActiveEditor",
      "when": "editorFocus && neovim.mode == normal"
   },
   {
      "key": "[IntlBackslash]",
      "command": "workbench.action.focusPreviousGroup",
      "when": "listFocus && !inputFocus && !terminalFocus"
   },
   {
      "key": "shift+left",
      "command": "workbench.action.showPreviousWindowTab",
      "when": "editorFocus && vim.active && vim.mode == 'Normal'"
   },
   {
      "key": "shift+right",
      "command": "editor.action.showNextWindowTab",
      "when": "editorFocus && vim.active && vim.mode == 'Normal'"
   },
   {
      "key": "shift+l",
      "command": "workbench.action.nextEditor",
      "when": "editorFocus && vim.active && vim.mode == 'Normal'"
   },
   {
      "key": "shift+l",
      "command": "workbench.action.nextEditor",
      "when": "editorFocus && neovim.mode == normal"
   },
   {
      "key": "alt+cmd+right",
      "command": "-workbench.action.nextEditor"
   },
   {
      "key": "shift+h",
      "command": "workbench.action.previousEditor",
      "when": "editorFocus && vim.active && vim.mode == 'Normal'"
   },
   {
      "key": "shift+h",
      "command": "workbench.action.previousEditor",
      "when": "editorFocus && neovim.mode == normal"
   },
   {
      "key": "alt+cmd+left",
      "command": "-workbench.action.previousEditor"
   },
   {
      "key": "shift+[Quote]",
      "command": "workbench.action.navigateBack",
      "when": "listFocus || editorFocus && vim.active && vim.mode == 'Normal' || editorFocus && neovim.mode == normal"
   },
   {
      "key": "ctrl+-",
      "command": "-workbench.action.navigateBack"
   },
   {
      "key": "[Quote]",
      "command": "workbench.action.navigateForward",
      "when": "listFocus || editorFocus && neovim.mode == 'normal' || editorFocus && vim.active && vim.mode == 'Normal'"
   },
   {
      "key": "ctrl+shift+-",
      "command": "-workbench.action.navigateForward"
   },
   {
      "key": "cmd+k",
      "command": "workbench.files.action.collapseExplorerFolders",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "shift+cmd+i",
      "command": "editor.action.goToImplementation",
      "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
   },
   {
      "key": "cmd+f12",
      "command": "-editor.action.goToImplementation",
      "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
   },
   {
      "key": "cmd+k cmd+k",
      "command": "-editor.action.defineKeybinding",
      "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
   },
   {
      "key": "cmd+k cmd+k",
      "command": "-keybindings.editor.defineKeybinding",
      "when": "inKeybindings && keybindingFocus"
   },
   {
      "key": "cmd+k cmd+e",
      "command": "-keybindings.editor.defineWhenExpression",
      "when": "inKeybindings && keybindingFocus"
   },
   {
      "key": "cmd+q",
      "command": "workbench.action.terminal.kill",
      "when": "terminalFocus"
   },
   {
      "key": "cmd+s",
      "command": "workbench.action.terminal.split",
      "when": "terminalFocus"
   },
   {
      "key": "ctrl+shift+5",
      "command": "-workbench.action.terminal.split",
      "when": "terminalFocus"
   },
   {
      "key": "cmd+s",
      "command": "workbench.action.files.save",
      "when": "editorFocus || listFocus"
   },
   {
      "key": "cmd+s",
      "command": "-workbench.action.files.save"
   },
   {
      "key": "cmd+r",
      "command": "workbench.action.terminal.rename",
      "when": "terminalFocus"
   },
   {
      "key": "shift+cmd+a shift+cmd+s",
      "command": "workbench.action.files.saveAs",
      "when": "editorFocus || listFocus"
   },
   {
      "key": "shift+cmd+n",
      "command": "workbench.action.terminal.openNativeConsole",
      "when": "!terminalFocus"
   },
   {
      "key": "shift+cmd+c",
      "command": "-workbench.action.terminal.openNativeConsole",
      "when": "!terminalFocus"
   },
   {
      "key": "shift+cmd+c",
      "command": "editor.action.copyLinesDownAction",
      "when": "editorTextFocus"
   },
   {
      "key": "shift+cmd+d",
      "command": "-editor.action.copyLinesDownAction",
      "when": "editorTextFocus"
   },
   {
      "key": "shift+cmd+d",
      "command": "editor.action.revealDefinition",
      "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
   },
   {
      "key": "f12",
      "command": "-editor.action.revealDefinition",
      "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
   },
   {
      "key": "shift+cmd+g",
      "command": "-editor.action.previousMatchFindAction",
      "when": "editorFocus"
   },
   {
      "key": "shift+cmd+g",
      "command": "-workbench.action.terminal.findPrevious",
      "when": "terminalFindFocused || terminalFocus"
   },
   {
      "key": "cmd+[IntlBackslash]",
      "command": "workbench.action.focusSideBar",
      "when": "editorFocus || terminalFocus"
   },
   {
      "key": "cmd+[IntlBackslash]",
      "command": "workbench.action.toggleSidebarVisibility",
      "when": "listFocus && !inputFocus && !editorFocus && !terminalFocus && !editorTextFocus"
   },
   {
      "key": "cmd+0",
      "command": "-workbench.action.focusSideBar"
   },
   {
      "key": "shift+cmd+g",
      "command": "workbench.view.scm"
   },
   {
      "key": "ctrl+shift+g",
      "command": "-workbench.view.scm"
   },
   {
      "key": "right",
      "command": "nextCompressedFolder",
      "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedLastFocus && !inputFocus"
   },
   {
      "key": "right",
      "command": "-nextCompressedFolder",
      "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedLastFocus && !inputFocus"
   },
   {
      "key": "left",
      "command": "previousCompressedFolder",
      "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedFirstFocus && !inputFocus"
   },
   {
      "key": "left",
      "command": "-previousCompressedFolder",
      "when": "explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedFirstFocus && !inputFocus"
   },
   {
      "key": "l",
      "command": "-list.select",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "h",
      "command": "-list.collapse",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "l",
      "command": "list.expand",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "right",
      "command": "-list.expand",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "h",
      "command": "list.collapse",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "left",
      "command": "-list.collapse",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "ö",
      "command": "workbench.action.find",
      "when": "editorFocus && neovim.mode == normal"
   },
   {
      "key": "shift+cmd+o",
      "command": "-workbench.action.gotoSymbol"
   },
   {
      "key": "shift+cmd+o",
      "command": "workbench.action.files.openFileFolder"
   },
   {
      "key": "cmd+o",
      "command": "-workbench.action.files.openFileFolder"
   },
   {
      "key": "k",
      "command": "list.focusUp",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "ctrl+p",
      "command": "-list.focusUp",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "j",
      "command": "list.focusDown",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "ctrl+n",
      "command": "-list.focusDown",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "enter",
      "command": "-list.select",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "a",
      "command": "explorer.newFile",
      "when": "listFocus && !inputFocus && !terminalFocus"
   },
   {
      "key": "shift+a",
      "command": "explorer.newFolder",
      "when": "listFocus && !inputFocus && !terminalFocus"
   },
   {
      "key": "d",
      "command": "deleteFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
   },
   {
      "key": "alt+cmd+backspace",
      "command": "-deleteFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
   },
   {
      "key": "[Semicolon]",
      "command": "list.toggleKeyboardNavigation",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
   },
   {
      "key": "f",
      "command": "list.toggleKeyboardNavigation",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
   },
   {
      "key": "r",
      "command": "renameFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
   },
   {
      "key": "enter",
      "command": "-renameFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
   }
]